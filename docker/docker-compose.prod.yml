services:
  # Venomous Workflow Dashboard ( Vite Frontend )
  # ====================================================================================================
  workflow_dashboard:
    image: venomous_workflow_dashboard
    container_name: dashboard
    build:
      context: ../app-dashboard
      dockerfile: docker/Dockerfile.prod
    ports:
      - 5000:5000
    environment:
      - NODE_ENV=development
      - VITE_APP_SERVER_DOMAIN=http://host.docker.internal:5200
    volumes:
      - ../app-dashboard:/app
      - /app/node_modules  # 必须要有此行以解决 Vite 报错: Cannot find module @rollup/rollup-linux-x64-gnu on Docker container
    networks:
      - venomous_workflow_network

  # Venomous Workflow Server ( Django Backend )
  # ====================================================================================================
  workflow_server:
    image: venomous_workflow_server
    container_name: server
    build:
      context: ../app-server
      dockerfile: docker/Dockerfile.prod
    ports:
      - 5200:5200
    environment:
      - APP_SERVER_ENV=production
      - APP_SERVER_DB_HOST=workflow_server_db
      - APP_SERVER_DB_PORT=5432 # 容器内通信不是宿主机，所以使用默认的 5432
      - APP_SERVER_DB_USER=postgres
      - APP_SERVER_DB_PASSWORD=postgres
      - APP_SERVER_DB_NAME=workflow_server_db
      - APP_SERVER_REDIS_HOST=workflow_server_redis
      - APP_SERVER_REDIS_PORT=6379 # 容器内通信不是宿主机，所以使用默认的 6379
    command: sh -c "\
      python manage.py runserver 0.0.0.0:5200
      "
    depends_on:
      workflow_server_db:
        condition: service_healthy
    volumes:
      - ../app-server:/app
    networks:
      - venomous_workflow_network

  # Venomous Workflow Server Database ( PostgreSQL )
  # ====================================================================================================
  workflow_server_db:
    image: postgres:13.3
    container_name: server_db
    ports:
      - 5300:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflow_server_db
    volumes:
      - workflow_server_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d workflow_server_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - venomous_workflow_network


networks:
  venomous_workflow_network:
    driver: bridge


volumes:
  workflow_server_db:
